<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper	namespace="com.ezen.springmvc.domain.member.mapper.MemberMapper">
	<!-- 회원 등록 -->
	<insert id="create" parameterType="MemberDto" >
		INSERT INTO member(member_id, name, nickname, member_passwd, member_address, gender, birth_date, email)
		VALUES(#{memberId}, #{name}, #{nickname}, #{memberPasswd}, #{memberAddress}, #{gender}, #{birthDate}, #{email})
		<!-- INSERT 후 등록일자 SELECT -->
		<selectKey keyProperty="regdate" resultType="string" order="AFTER">
			SELECT TO_CHAR(regdate, 'YYYY-MM-DD HH24:MM')
			FROM member WHERE member_id = #{memberId}
		</selectKey>
	</insert>

	<!-- 아이디로 회원 상세 조회 -->
	<select id="findById" parameterType="string" resultType="MemberDto">
		SELECT member_id, name, nickname, hobby, interest, member_address, gender, birth_date, introduce, picture, store_picture, member_passwd, email, TO_CHAR(regdate, 'YYYY-MM-DD') regdate
		FROM member
		WHERE member_id = #{value}
	</select>

	<!-- 회원 인증 -->
	<select id="findByIdAndPasswd" resultType="MemberDto">
		SELECT member_id, name, nickname, hobby, interest, member_address, gender, birth_date, introduce, picture, store_picture, member_passwd, email, TO_CHAR(regdate, 'YYYY-MM-DD') regdate
		FROM member
		WHERE member_id = #{memberId} AND member_passwd = #{memberPasswd}
	</select>

	<!-- 회원 정보 수정 -->
	<update id="updateInfo" parameterType="MemberDto">
		UPDATE member
		SET nickname = #{nickname}, email = #{email}, hobby = #{hobby}, interest = #{interest}, introduce = #{introduce}
		WHERE member_id = #{memberId}
	</update>

	<!-- 회원 비밀번호 변경 -->
	<update id="updatePasswd" parameterType="MemberDto">
		UPDATE member
		SET member_passwd = #{memberPasswd}
		WHERE member_id = #{memberId}
	</update>

	<!-- 회원 대표사진 변경 -->
	<update id="updatePicture" parameterType="MemberDto">
		UPDATE member
		SET picture = #{picture}, store_picture = #{storePicture}
		WHERE member_id = #{memberId}
	</update>

<!--	회원 아이디 찾기-->
	<select id="findMemberId" parameterType="string">
		SELECT member_id
		FROM member
		WHERE name = #{name} AND nickname = #{nickname}
	</select>

<!--	회원 비밀번호 찾기-->
	<select id="findMemberPasswd" parameterType="string" resultType="MemberDto">
		SELECT member_id, member_passwd, name, nickname, email
		FROM member
		WHERE member_id = #{id} AND name = #{name} AND email = #{email}
	</select>

	<!-- 회원 전체 조회 -->
	<select id="findByAll" resultType="MemberDto" >
		SELECT member_id, name, email, TO_CHAR(regdate, 'YYYY-MM-DD HH24:MI:SS DAY') regdate
		FROM member
		ORDER BY regdate DESC
	</select>
</mapper>

