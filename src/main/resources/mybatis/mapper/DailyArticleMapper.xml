<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ezen.springmvc.domain.dailyarticle.mapper.DailyArticleMapper">
    <!-- 신규 일상 게시글 생성 -->
    <insert id="createDailyArticle" parameterType="DailyArticleDto">
        INSERT INTO daily_article(d_article_id, title, content, category_id, member_id)
        VALUES (D_ARTICLE_ID_SEQ.nextval, #{title}, #{content}, #{categoryId}, #{memberId})
    </insert>

    <!-- 일상 게시글 번호로 게시글 조회 -->
    <select id="findByDailyArticleId" parameterType="int" resultType="DailyArticleDto">
        SELECT title, regdate, hitcount, category_id, member_id
        FROM daily_article
        WHERE d_article_id = #{dailyArticleId}
    </select>

    <!-- 일상 게시글 목록 조회 -->
    <select id="findByAllDailyArticle" parameterType="int" resultType="DailyArticleDto">
        SELECT d.d_article_id AS dailyArticleId, d.title, d.member_id, f.file_name, f.encrypted_name
        FROM daily_article d
                 JOIN attach_file f
                      ON d.d_article_id = f.d_article_id
        WHERE d.category_id = #{categoryId}
        ORDER BY d.d_article_id DESC
    </select>

<!--    &lt;!&ndash; 일상 게시글 상세 보기 &ndash;&gt;-->
<!--    <select id="readDailyArticle" parameterType="int" resultType="DailyArticleDto">-->
<!--        SELECT d.title, d.content, d.member_id, TO_CHAR(d.regdate, 'YYYY-MM-DD HH24:MI') regdate, f.file_name-->
<!--        FROM daily_article d-->
<!--                 JOIN attach_file f-->
<!--                      ON d.d_article_id = f.d_article_id-->
<!--        WHERE d.category_id = #{categoryId}-->
<!--          AND d.d_article_id = #{dailyArticleId}-->
<!--    </select>-->

    <select id="readDailyArticle" parameterType="int" resultType="DailyArticleDto">
        SELECT d.title,
               d.content,
               d.member_id,
               TO_CHAR(d.regdate, 'YYYY-MM-DD HH24:MI') AS regdate,
               f.file_name,
               COALESCE(h1.member_heart_count, 0)          "heartCount",
               h2.total_heart_count                        "totalHeartCount"
        FROM daily_article d
                 LEFT JOIN
             attach_file f ON d.d_article_id = f.d_article_id
                 LEFT JOIN
             (SELECT member_id,
                     SUM(heart_count) AS member_heart_count
              FROM heart
              WHERE d_article_id = #{dailyArticleId}
              GROUP BY member_id) h1 ON d.d_article_id = #{dailyArticleId}
                 LEFT JOIN
             (SELECT SUM(heart_count) AS total_heart_count
              FROM heart
              WHERE d_article_id = #{dailyArticleId}) h2 ON 1 = 1
        WHERE d.category_id = #{categoryId}
          AND d.d_article_id = #{dailyArticleId}
    </select>




</mapper>

